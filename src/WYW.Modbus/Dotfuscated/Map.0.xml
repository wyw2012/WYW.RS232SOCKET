<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2024-03-28T10:48:41</timestamp>
        <product version="6.5.3+7f0b0a9d18" user="彦为 王">Dotfuscator Community</product>
    </header>
    <mapping>
        <module>
            <name>WYW.Modbus.dll</name>
            <methodlist>
                <method>
                    <signature>void()</signature>
                    <name>.cctor</name>
                </method>
            </methodlist>
            <type>
                <name>Costura.AssemblyLoader</name>
                <newname>h</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Attach</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream)</signature>
                        <name>CopyTo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Globalization.CultureInfo)</signature>
                        <name>CultureToString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.IO.Stream(System.Collections.Generic.Dictionary`2&lt;string,string&gt;, string)</signature>
                        <name>LoadStream</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.IO.Stream(string)</signature>
                        <name>LoadStream</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Reflection.Assembly(System.Reflection.AssemblyName)</signature>
                        <name>ReadExistingAssembly</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Reflection.Assembly(System.Collections.Generic.Dictionary`2&lt;string,string&gt;, System.Collections.Generic.Dictionary`2&lt;string,string&gt;, System.Reflection.AssemblyName)</signature>
                        <name>ReadFromEmbeddedResources</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](System.IO.Stream)</signature>
                        <name>ReadStream</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Reflection.Assembly(object, System.ResolveEventArgs)</signature>
                        <name>ResolveAssembly</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>assemblyNames</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>isAttached</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,bool&gt;</signature>
                        <name>nullCache</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>nullCacheLock</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>symbolNames</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.BitConverterHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](bool, WYW.Modbus.EndianType)</signature>
                        <name>GetBytes</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](char, WYW.Modbus.EndianType)</signature>
                        <name>GetBytes</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](float32, WYW.Modbus.EndianType)</signature>
                        <name>GetBytes</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](float64, WYW.Modbus.EndianType)</signature>
                        <name>GetBytes</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](int16, WYW.Modbus.EndianType)</signature>
                        <name>GetBytes</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](int32, WYW.Modbus.EndianType)</signature>
                        <name>GetBytes</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](int64, WYW.Modbus.EndianType)</signature>
                        <name>GetBytes</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int16, WYW.Modbus.EndianType)</signature>
                        <name>GetBytes</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int32, WYW.Modbus.EndianType)</signature>
                        <name>GetBytes</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int64, WYW.Modbus.EndianType)</signature>
                        <name>GetBytes</name>
                    </method>
                    <method>
                        <signature>float64(unsigned int8[], int32, WYW.Modbus.EndianType)</signature>
                        <name>ToDouble</name>
                    </method>
                    <method>
                        <signature>int16(unsigned int8[], int32, WYW.Modbus.EndianType)</signature>
                        <name>ToInt16</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int8[], int32, WYW.Modbus.EndianType)</signature>
                        <name>ToInt32</name>
                    </method>
                    <method>
                        <signature>int64(unsigned int8[], int32, WYW.Modbus.EndianType)</signature>
                        <name>ToInt64</name>
                    </method>
                    <method>
                        <signature>float32(unsigned int8[], int32, WYW.Modbus.EndianType)</signature>
                        <name>ToSingle</name>
                    </method>
                    <method>
                        <signature>unsigned int16(unsigned int8[], int32, WYW.Modbus.EndianType)</signature>
                        <name>ToUInt16</name>
                    </method>
                    <method>
                        <signature>unsigned int16[](unsigned int8[], int32, WYW.Modbus.EndianType)</signature>
                        <name>ToUInt16Array</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int8[], int32, WYW.Modbus.EndianType)</signature>
                        <name>ToUInt32</name>
                    </method>
                    <method>
                        <signature>unsigned int64(unsigned int8[], int32, WYW.Modbus.EndianType)</signature>
                        <name>ToUInt64</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Clients.ClientBase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Open</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;unsigned int8&gt;&amp;)</signature>
                        <name>Read</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[])</signature>
                        <name>Write</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorMessage</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEstablished</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsOpen</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ErrorMessage</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsEstablished</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsOpen</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ErrorMessage&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsEstablished&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsOpen&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ErrorMessage</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsEstablished</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsOpen</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Clients.RS232Client</name>
                <methodlist>
                    <method>
                        <signature>void(string, int32, int32, int32, int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Open</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;unsigned int8&gt;&amp;)</signature>
                        <name>Read</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[])</signature>
                        <name>Write</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.IO.Ports.SerialPort</signature>
                        <name>serialPort</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Clients.TCPClient</name>
                <methodlist>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Open&gt;b__6_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Open</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;unsigned int8&gt;&amp;)</signature>
                        <name>Read</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>TryPing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[])</signature>
                        <name>Write</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Net.Sockets.Socket</signature>
                        <name>clientSocket</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>inBuffer</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Net.IPEndPoint</signature>
                        <name>ipep</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isKeepThreadAlive</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>serverIP</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Clients.VISAClient</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Open&gt;b__12_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;Open&gt;b__12_1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;Open&gt;b__12_2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>&lt;Open&gt;b__12_3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Open</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;unsigned int8&gt;&amp;)</signature>
                        <name>Read</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[])</signature>
                        <name>Write</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ReceiveTimeout</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_TerminationCharacter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ReceiveTimeout</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_TerminationCharacter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ReceiveTimeout&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>&lt;TerminationCharacter&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>NationalInstruments.Visa.MessageBasedSession</signature>
                        <name>mbSession</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>resourceName</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>ReceiveTimeout</name>
                    </property>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>TerminationCharacter</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Device</name>
                <methodlist>
                    <method>
                        <signature>void(WYW.Modbus.Clients.ClientBase, WYW.Modbus.ProtocolType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.Protocols.ProtocolBase(string)</signature>
                        <name>CreateHeartBeatContent</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.Protocols.ProtocolBase(string)</signature>
                        <name>GetObject</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(string, bool, int32, int32)</signature>
                        <name>SendCommand</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(WYW.Modbus.Protocols.ProtocolBase, bool, int32, int32)</signature>
                        <name>SendProtocol</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.DeviceBase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.Clients.ClientBase, WYW.Modbus.ProtocolType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Close</name>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.ExecutionResult)</signature>
                        <name>OnHeartbeatTriggered</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OnWhenConnected</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Open</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(WYW.Modbus.Protocols.ProtocolBase, bool, int32, int32)</signature>
                        <name>SendProtocol</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartHeartbeat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WYW.Modbus.Clients.ClientBase()</signature>
                        <name>get_Client</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.Heartbeat()</signature>
                        <name>get_Heartbeat</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsConnected</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ProtocolType()</signature>
                        <name>get_Protocol</name>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.Clients.ClientBase)</signature>
                        <name>set_Client</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsConnected</name>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.ProtocolType)</signature>
                        <name>set_Protocol</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.Clients.ClientBase</signature>
                        <name>&lt;Client&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.Heartbeat</signature>
                        <name>&lt;Heartbeat&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.ProtocolType</signature>
                        <name>&lt;Protocol&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isConnected</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isKeepHeartbeatTheadAlive</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>lastReceiveTime</name>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>locker</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WYW.Modbus.Clients.ClientBase()</signature>
                        <name>Client</name>
                    </property>
                    <property>
                        <signature>WYW.Modbus.Heartbeat()</signature>
                        <name>Heartbeat</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsConnected</name>
                    </property>
                    <property>
                        <signature>WYW.Modbus.ProtocolType()</signature>
                        <name>Protocol</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.EndianType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.EndianType</signature>
                        <name>BigEndian</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.EndianType</signature>
                        <name>LittleEndian</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.ExecutionResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(string, WYW.Modbus.Protocols.ProtocolBase)</signature>
                        <name>Failed</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(WYW.Modbus.Protocols.ProtocolBase)</signature>
                        <name>Success</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ErrorMessage</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSuccess</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.Protocols.ProtocolBase()</signature>
                        <name>get_Response</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ErrorMessage</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsSuccess</name>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.Protocols.ProtocolBase)</signature>
                        <name>set_Response</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ErrorMessage&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsSuccess&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.Protocols.ProtocolBase</signature>
                        <name>&lt;Response&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ErrorMessage</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsSuccess</name>
                    </property>
                    <property>
                        <signature>WYW.Modbus.Protocols.ProtocolBase()</signature>
                        <name>Response</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.ExtensionMethod</name>
                <methodlist>
                    <method>
                        <signature>string(string)</signature>
                        <name>AddSpace</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;!!0&gt;(System.Data.DataTable)</signature>
                        <name>DataTableToList</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(!!0)</signature>
                        <name>DeepClone</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int16, int32)</signature>
                        <name>GetBit</name>
                    </method>
                    <method>
                        <signature>string(System.Enum)</signature>
                        <name>GetDescription</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Enum(string)</signature>
                        <name>GetEnumByDescription</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetMD5</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>GetMD5</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsIPV4</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;(string)</signature>
                        <name>RegexDouble</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[], int32, int32)</signature>
                        <name>SubBytes</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ToASCII</name>
                    </method>
                    <method>
                        <signature>bool(string, float64[]&amp;, char)</signature>
                        <name>ToDoubleArray</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ToFileName</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>ToHexArray</name>
                    </method>
                    <method>
                        <signature>string(System.Collections.Generic.IEnumerable`1&lt;unsigned int8&gt;)</signature>
                        <name>ToHexString</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ToUTF8</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[], int32, int32)</signature>
                        <name>ToUTF8</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.ExtensionMethod/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(string)</signature>
                        <name>&lt;ToDoubleArray&gt;b__14_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(string)</signature>
                        <name>&lt;ToHexArray&gt;b__1_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8)</signature>
                        <name>&lt;ToHexString&gt;b__0_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.ExtensionMethod/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;unsigned int8,string&gt;</signature>
                        <name>&lt;&gt;9__0_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,float64&gt;</signature>
                        <name>&lt;&gt;9__14_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,unsigned int8&gt;</signature>
                        <name>&lt;&gt;9__1_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Heartbeat</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.Protocols.ProtocolBase()</signature>
                        <name>get_Content</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_IntervalSeconds</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEnabled</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxRetryCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Timeout</name>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.Protocols.ProtocolBase)</signature>
                        <name>set_Content</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_IntervalSeconds</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsEnabled</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxRetryCount</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Timeout</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.Protocols.ProtocolBase</signature>
                        <name>&lt;Content&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>&lt;IntervalSeconds&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsEnabled&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;MaxRetryCount&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Timeout&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>WYW.Modbus.Protocols.ProtocolBase()</signature>
                        <name>Content</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>IntervalSeconds</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsEnabled</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxRetryCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Timeout</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.ModbusCommand</name>
                <newname>a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.ModbusCommand</signature>
                        <name>ReadMoreCoils</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.ModbusCommand</signature>
                        <name>ReadMoreDiscreteInputRegisters</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.ModbusCommand</signature>
                        <name>ReadMoreHoldingRegisters</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.ModbusCommand</signature>
                        <name>ReadMoreInputResiters</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.ModbusCommand</signature>
                        <name>ReadWriteHoldingRegisters</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.ModbusCommand</signature>
                        <name>WriteMoreCoils</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.ModbusCommand</signature>
                        <name>WriteMoreHoldingRegisters</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.ModbusCommand</signature>
                        <name>WriteOneCoil</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.ModbusCommand</signature>
                        <name>WriteOneHoldingRegister</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.ModbusMaster</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.Clients.ClientBase, WYW.Modbus.ProtocolType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.Protocols.ProtocolBase(unsigned int8, int32, int32, WYW.Modbus.RegisterType, unsigned int16)</signature>
                        <name>CreateHeartBeatContent</name>
                    </method>
                    <method>
                        <signature>bool(int32, unsigned int16, unsigned int16, WYW.Modbus.RegisterType, int32)</signature>
                        <name>MonitorRegister</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(int32, unsigned int16, unsigned int16, bool[]&amp;, int32, int32)</signature>
                        <name>ReadCoils</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(int32, unsigned int16, unsigned int16, bool[]&amp;, int32, int32)</signature>
                        <name>ReadDiscreteInputRegisters</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(int32, unsigned int16, unsigned int16, unsigned int16[]&amp;, int32, int32)</signature>
                        <name>ReadHoldingRegisters</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(int32, unsigned int16, unsigned int16, unsigned int8[]&amp;, int32, int32)</signature>
                        <name>ReadHoldingRegisters</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(int32, unsigned int16, unsigned int16, unsigned int16[]&amp;, int32, int32)</signature>
                        <name>ReadInputRegisters</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(int32, unsigned int16, unsigned int16, unsigned int8[]&amp;, int32, int32)</signature>
                        <name>ReadInputRegisters</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(int32, WYW.Modbus.ModbusCommand, unsigned int8[], int32, int32)</signature>
                        <name>SendCommand</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(WYW.Modbus.Protocols.ProtocolBase, bool, int32, int32)</signature>
                        <name>SendProtocol</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(int32, unsigned int16, bool, int32, int32)</signature>
                        <name>WriteCoil</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(int32, unsigned int16, bool[], int32, int32)</signature>
                        <name>WriteCoils</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(int32, unsigned int16, unsigned int16, int32, int32)</signature>
                        <name>WriteHoldingRegister</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(int32, unsigned int16, unsigned int16[], int32, int32)</signature>
                        <name>WriteHoldingRegisters</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(int32, unsigned int16, unsigned int8[], int32, int32)</signature>
                        <name>WriteHoldingRegisters</name>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_TransactionID</name>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_TransactionID</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;TransactionID&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int16()</signature>
                        <name>TransactionID</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.ObservableObject</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>OnPropertyChanged</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(!!0&amp;, !!0, string)</signature>
                        <name>SetProperty</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist>
                    <event>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>WYW.Modbus.OperationType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.OperationType</signature>
                        <name>Read</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.OperationType</signature>
                        <name>Write</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.ProtocolType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.ProtocolType</signature>
                        <name>AsciiCR</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.ProtocolType</signature>
                        <name>AsciiCRLF</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.ProtocolType</signature>
                        <name>AsciiLF</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.ProtocolType</signature>
                        <name>ModbusRTU</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.ProtocolType</signature>
                        <name>ModbusTCP</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Protocols.AsciiCR</name>
                <newname>b</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;WYW.Modbus.Protocols.ProtocolBase&gt;(System.Collections.Generic.List`1&lt;unsigned int8&gt;)</signature>
                        <name>GetResponse</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinLength</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>ProtocolTrail</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Protocols.AsciiCRLF</name>
                <newname>c</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;WYW.Modbus.Protocols.ProtocolBase&gt;(System.Collections.Generic.List`1&lt;unsigned int8&gt;)</signature>
                        <name>GetResponse</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinLength</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>ProtocolTrail</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Protocols.AsciiLF</name>
                <newname>d</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;WYW.Modbus.Protocols.ProtocolBase&gt;(System.Collections.Generic.List`1&lt;unsigned int8&gt;)</signature>
                        <name>GetResponse</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinLength</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>ProtocolTrail</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Protocols.ModbusBase</name>
                <newname>e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ModbusCommand()</signature>
                        <name>get_Command</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_SlaveID</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.ModbusCommand)</signature>
                        <name>set_Command</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_SlaveID</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.ModbusCommand</signature>
                        <name>&lt;Command&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>&lt;SlaveID&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Protocols.ModbusRTU</name>
                <newname>f</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int8, WYW.Modbus.ModbusCommand, unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[])</signature>
                        <name>GetModbusCRC</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;WYW.Modbus.Protocols.ProtocolBase&gt;(System.Collections.Generic.List`1&lt;unsigned int8&gt;)</signature>
                        <name>GetResponse</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinLength</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Protocols.ModbusTCP</name>
                <newname>g</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int8, WYW.Modbus.ModbusCommand, unsigned int8[], unsigned int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;WYW.Modbus.Protocols.ProtocolBase&gt;(System.Collections.Generic.List`1&lt;unsigned int8&gt;)</signature>
                        <name>GetResponse</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinLength</name>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_TransactionID</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_TransactionID</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;TransactionID&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Protocols.ProtocolBase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;WYW.Modbus.Protocols.ProtocolBase&gt;(System.Collections.Generic.List`1&lt;unsigned int8&gt;)</signature>
                        <name>GetResponse</name>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Protocols.ProtocolBase)</signature>
                        <name>IsMatch</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToHexString</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_Content</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreateTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FriendlyText</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_FullBytes</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinLength</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Tag</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>set_Content</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreateTime</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FriendlyText</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>set_FullBytes</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Tag</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>&lt;Content&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CreateTime&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FriendlyText&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>&lt;FullBytes&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int8[]()</signature>
                        <name>Content</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>CreateTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FriendlyText</name>
                    </property>
                    <property>
                        <signature>unsigned int8[]()</signature>
                        <name>FullBytes</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MinLength</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Tag</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Register</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, WYW.Modbus.RegisterType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>GetBytes</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.Register[](System.Data.DataTable, bool)</signature>
                        <name>GetRegisters</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[], int32)</signature>
                        <name>GetValue</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.ExecutionResult(WYW.Modbus.ModbusMaster, int32, WYW.Modbus.Register, int32)</signature>
                        <name>ReadOrWriteOne</name>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.ModbusMaster, int32, System.Collections.Generic.IEnumerable`1&lt;WYW.Modbus.Register&gt;, int32, System.Threading.CancellationTokenSource, bool)</signature>
                        <name>ReadRegisters</name>
                    </method>
                    <method>
                        <signature>System.Data.DataTable(System.Collections.Generic.IEnumerable`1&lt;WYW.Modbus.Register&gt;)</signature>
                        <name>ToDataTable</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;WYW.Modbus.Register&gt;)</signature>
                        <name>ValicateAddress</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;WYW.Modbus.Register&gt;)</signature>
                        <name>ValicateValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.ModbusMaster, int32, System.Collections.Generic.IEnumerable`1&lt;WYW.Modbus.Register&gt;, int32, bool, System.Threading.CancellationTokenSource, bool)</signature>
                        <name>WriteRegisters</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Address</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.RegisterEndianType()</signature>
                        <name>get_EndianType</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsChecked</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.OperationType()</signature>
                        <name>get_OperationType</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RegisterCount</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.RegisterType()</signature>
                        <name>get_RegisterType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Unit</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.RegisterValueType()</signature>
                        <name>get_ValueType</name>
                    </method>
                    <method>
                        <signature>WYW.Modbus.RegisterWriteType()</signature>
                        <name>get_WriteType</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Address</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.RegisterEndianType)</signature>
                        <name>set_EndianType</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsChecked</name>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.OperationType)</signature>
                        <name>set_OperationType</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_RegisterCount</name>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.RegisterType)</signature>
                        <name>set_RegisterType</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Unit</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.RegisterValueType)</signature>
                        <name>set_ValueType</name>
                    </method>
                    <method>
                        <signature>void(WYW.Modbus.RegisterWriteType)</signature>
                        <name>set_WriteType</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_value</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>address</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterEndianType</signature>
                        <name>endianType</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isChecked</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.OperationType</signature>
                        <name>operationType</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>registerCount</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterType</signature>
                        <name>registerType</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>unit</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterValueType</signature>
                        <name>valueType</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterWriteType</signature>
                        <name>writeType</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Address</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                    <property>
                        <signature>WYW.Modbus.RegisterEndianType()</signature>
                        <name>EndianType</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsChecked</name>
                    </property>
                    <property>
                        <signature>WYW.Modbus.OperationType()</signature>
                        <name>OperationType</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>RegisterCount</name>
                    </property>
                    <property>
                        <signature>WYW.Modbus.RegisterType()</signature>
                        <name>RegisterType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Unit</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Value</name>
                    </property>
                    <property>
                        <signature>WYW.Modbus.RegisterValueType()</signature>
                        <name>ValueType</name>
                    </property>
                    <property>
                        <signature>WYW.Modbus.RegisterWriteType()</signature>
                        <name>WriteType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Register/&lt;&gt;c</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_0</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_1</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_10</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_11</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_12</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_13</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_14</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_15</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_16</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_17</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_2</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_3</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_4</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_5</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_6</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_7</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_8</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;ReadRegisters&gt;b__50_9</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>WYW.Modbus.RegisterType(WYW.Modbus.Register)</signature>
                        <name>&lt;ValicateAddress&gt;b__53_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;ValicateAddress&gt;b__53_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Linq.IGrouping`2&lt;int32,WYW.Modbus.Register&gt;)</signature>
                        <name>&lt;ValicateAddress&gt;b__53_2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(System.Linq.IGrouping`2&lt;int32,WYW.Modbus.Register&gt;)</signature>
                        <name>&lt;ValicateAddress&gt;b__53_3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;ValicateValue&gt;b__54_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;WriteRegisters&gt;b__51_0</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;WriteRegisters&gt;b__51_1</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;WriteRegisters&gt;b__51_10</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;WriteRegisters&gt;b__51_11</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;WriteRegisters&gt;b__51_2</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;WriteRegisters&gt;b__51_3</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;WriteRegisters&gt;b__51_4</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;WriteRegisters&gt;b__51_5</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;WriteRegisters&gt;b__51_6</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;WriteRegisters&gt;b__51_7</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;WriteRegisters&gt;b__51_8</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32(WYW.Modbus.Register)</signature>
                        <name>&lt;WriteRegisters&gt;b__51_9</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.Register/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,bool&gt;</signature>
                        <name>&lt;&gt;9__50_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,bool&gt;</signature>
                        <name>&lt;&gt;9__50_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__50_10</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__50_11</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__50_12</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__50_13</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__50_14</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__50_15</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__50_16</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__50_17</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,bool&gt;</signature>
                        <name>&lt;&gt;9__50_2</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__50_3</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,bool&gt;</signature>
                        <name>&lt;&gt;9__50_4</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__50_5</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,bool&gt;</signature>
                        <name>&lt;&gt;9__50_6</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__50_7</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,bool&gt;</signature>
                        <name>&lt;&gt;9__50_8</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__50_9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,bool&gt;</signature>
                        <name>&lt;&gt;9__51_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,bool&gt;</signature>
                        <name>&lt;&gt;9__51_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__51_10</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__51_11</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,bool&gt;</signature>
                        <name>&lt;&gt;9__51_2</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,bool&gt;</signature>
                        <name>&lt;&gt;9__51_3</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,bool&gt;</signature>
                        <name>&lt;&gt;9__51_4</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__51_5</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,bool&gt;</signature>
                        <name>&lt;&gt;9__51_6</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__51_7</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__51_8</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__51_9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,WYW.Modbus.RegisterType&gt;</signature>
                        <name>&lt;&gt;9__53_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,int32&gt;</signature>
                        <name>&lt;&gt;9__53_1</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Linq.IGrouping`2&lt;int32,WYW.Modbus.Register&gt;,bool&gt;</signature>
                        <name>&lt;&gt;9__53_2</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Linq.IGrouping`2&lt;int32,WYW.Modbus.Register&gt;,int32&gt;</signature>
                        <name>&lt;&gt;9__53_3</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;WYW.Modbus.Register,bool&gt;</signature>
                        <name>&lt;&gt;9__54_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.Register/&lt;&gt;c__DisplayClass53_0</name>
                <newname>WYW.Modbus.Register/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(WYW.Modbus.Register)</signature>
                        <name>&lt;ValicateAddress&gt;b__4</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.Register</signature>
                        <name>register</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.RegisterEndianType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.RegisterEndianType</signature>
                        <name>BigEndian</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterEndianType</signature>
                        <name>LittleEndian</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.RegisterType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.RegisterType</signature>
                        <name>Coil</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterType</signature>
                        <name>DiscreteInputRegister</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterType</signature>
                        <name>HoldingRegister</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterType</signature>
                        <name>InputRegister</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.RegisterValueType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.RegisterValueType</signature>
                        <name>Double</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterValueType</signature>
                        <name>Float</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterValueType</signature>
                        <name>Int16</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterValueType</signature>
                        <name>Int32</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterValueType</signature>
                        <name>Int64</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterValueType</signature>
                        <name>UInt16</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterValueType</signature>
                        <name>UInt32</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterValueType</signature>
                        <name>UInt64</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterValueType</signature>
                        <name>UTF8</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYW.Modbus.RegisterWriteType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WYW.Modbus.RegisterWriteType</signature>
                        <name>R</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterWriteType</signature>
                        <name>RW</name>
                    </field>
                    <field>
                        <signature>WYW.Modbus.RegisterWriteType</signature>
                        <name>W</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WYWModbus_ProcessedByFody</name>
                <newname>i</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Costura</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FodyVersion</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>34</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>272</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>144</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>35</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>1</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>10</statistic>
            <statistic>29.41 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>71</statistic>
            <statistic>26.10 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>65</statistic>
            <statistic>45.14 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>22</statistic>
            <statistic>8.09 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>11</statistic>
            <statistic>4.04 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>6</statistic>
            <statistic>2.21 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>2</statistic>
            <statistic>0.74 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>2</statistic>
            <statistic>0.74 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'aa'</description>
            <statistic>1</statistic>
            <statistic>0.37 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'ab'</description>
            <statistic>1</statistic>
            <statistic>0.37 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>